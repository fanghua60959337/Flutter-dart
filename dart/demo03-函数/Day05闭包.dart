void main() {
  /*
  闭包：
    1、全局变量特点全局变量常驻内存、全局变量污染全局
    2、局部变量的特点：不常驻内存会被垃圾机制回收、不会污染全局I
    想实现的功能：
    1．常驻内存
    2．不污染全局
    产生了闭包，闭包可以解决这个问题.....
    闭包：函数嵌套函数，内部函数会调用外部函数的变量或参数，变量或参数不会被系闭包的写法：函数嵌套函数，并return 里面的函数，这样就形成了闭包。
*/
  print(a);
  fn() {
    a++;
    print(a);
  }

//一、这里每次调用fn 都会出现a被添+1的情况并且他保留了上次添加后的值这样就导致了变量常驻内存、全局变量污染全局
  fn();
  fn();
  fn();

//二、局部变量
  prinfinfo() {
    var b = 123;
    b++;
    print(b);
  }

//这里多次调用b都不会常驻内存 其实也想单于b每次都会被重新赋值为123
  prinfinfo();
  prinfinfo();
  prinfinfo();

//  三、想实现的功能： 1．常驻内存 2．不污染全局 就出现了闭包
// 语法 方法里面嵌套一个方法
  fn2() {
    var c = 200;
    return () {
      c++;
      print(c);
    };
  }

  var f = fn2();
  f();
  f();
  f();
}

//全局变量污染全局的列子
var a = 123;
